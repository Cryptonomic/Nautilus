include "developer"

conseil: {
  hostname: "0.0.0.0"
  port: 1337
}

logger.scala.slick=DEBUG

platforms: {
  tezos: {
    alphanet : {
      node: {
	      protocol: "http",
        hostname: "tezos-node-local",
        port: 8732
        pathPrefix: ""
      }
    }
  }
}

conseildb = {
  dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
  properties = {
    databaseName = "conseil-local"
    user = "conseiluser"
    password = "p@ssw0rd"
    url = "jdbc:postgresql://postgres-local:5432/conseil-local"
  }
  numThreads = 16
}

# Custom libSodium settings
sodium: {
  libraryPath: "/usr/local/Cellar/libsodium/1.0.16/lib/libsodium.23.dylib"
  }

lorre: {
  sleepIntervalInSeconds: 60
  #Used to make sure Lorre records average fees every n iterations
  feeUpdateInterval: 20
  #Used to make sure Lorre purges old accounts every n iterations
  purgeAccountsInterval: 10
  #Used to select how many fees should be averaged together
  numberOfFeesAveraged: 1000
}

dbAwaitTimeInSeconds: 120

GET-ResponseEntityTimeoutInSeconds: 90
POST-ResponseEntityTimeoutInSeconds: 1

batchedFetches {
  accountConcurrencyLevel = 5
  blockOperationsConcurrencyLevel = 10

}

security: {
  apiKeys: {
      keys: ["hooman"]
        }
	}
